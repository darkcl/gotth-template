package themes

templ themeSwitcherHandler() {
	{{ handle := templ.NewOnceHandle() }}
	@handle.Once() {
		<script nonce={ templ.GetNonce(ctx) }>
			document.addEventListener('alpine:init', () => {
				Alpine.data('themeSwitcherHandler', () => ({
					isDarkMode() {
						return this.isDark
					},
					isLightMode() {
						return !this.isDark
					}
				}))
			})
		</script>
	}
}

type ThemeSwitcherProps struct {
	Class string
}

templ ThemeSwitcher(props ...ThemeSwitcherProps) {
	@themeSwitcherHandler()

	<button
		@click="toggleTheme"
		class="bg-gray-300 dark:bg-gray-700 text-gray-800 dark:text-gray-200 px-3 py-1 rounded-lg hover:bg-gray-400 dark:hover:bg-gray-600"
  >
		@DynamicThemeIcon()
	</button>
}

templ DynamicThemeIcon() {
	<div x-data="themeSwitcherHandler">
		<span x-show="isDarkMode" class="block">
			Light Mode
		</span>
		<span x-show="isLightMode" class="block">
			Dark Mode
		</span>
	</div>
}
